<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.goat.hotplace.mapper.HotplaceMapper">
    <insert id="save" parameterType="hotplace">
        insert into hot_place(member_id, content_id, content_type_id, name, `desc`, visited_date, upload_file_name,
                              store_file_name)
        values (#{member.id}, #{attractionInfo.id}, #{contentTypeId}, #{name}, #{desc}, #{visitedDate}, #{uploadFile.uploadFileName},
                #{uploadFile.storeFileName})
    </insert>

    <select id="findById" parameterType="long" resultType="hotplace">
        select *, hot_place_id as 'id'
        from hot_place
        where hot_place_id = #{hotPlaceId}
    </select>

    <select id="findAll" resultType="hotplace">
        select *, hot_place_id as 'id'
        from hot_place
    </select>

    <update id="update" parameterType="hotplace">
        update hot_place
        set name=#{name},
            `desc`=#{desc},
            visited_date=#{visitedDate}
        where hot_place_id = #{id}
    </update>

    <update id="updateHit" parameterType="hotplace">
        update hot_place
        set hit=#{hit}
        where hot_place_id = #{id}
    </update>

    <delete id="remove" parameterType="long">
        delete
        from hot_place
        where hot_place_id = #{hotPlaceId}
    </delete>

    <delete id="clear">
        delete
        from hot_place
    </delete>

    <select id="findDetailById" parameterType="long" resultType="hotPlaceDetailDto">
        select hp.hot_place_id,
               hp.visited_date,
               hp.name,
               hp.desc,
               hp.store_file_name,
               m.member_id,
               m.nickname,
               a.title,
               a.first_image,
               a.addr1,
               a.zipcode,
               a.latitude,
               a.longitude
        from hot_place hp
                 join member m on hp.member_id = m.member_id
                 join attraction_info a on hp.content_id = a.content_id
        where hp.hot_place_id = #{hotPlaceId}
    </select>

    <select id="findByMemberId" parameterType="long" resultType="hotPlaceListDto">
        select hp.hot_place_id, hp.name, hp.desc, hp.hit, hp.store_file_name, m.nickname, hp.created_date
        from hot_place hp
                 join member m
                      on hp.member_id = m.member_id
        where m.member_id = #{memberId}
        order by hp.created_date desc
    </select>

    <select id="findFavoritesByMemberId" parameterType="map" resultType="hotPlaceListDto">
        select hp.hot_place_id, hp.name, hp.desc, hp.hit, hp.store_file_name, m.nickname, hp.created_date
        from hot_place hp
                 join favorite f
                      on hp.member_id = f.member_id
                 join member m
                      on f.member_id = m.member_id
        where f.member_id = #{memberId}
        order by hp.created_date desc
            limit #{pageNum}, #{amount}
    </select>

    <insert id="doFavorite" parameterType="map">
        insert into favorite(member_id, hotplace_id)
        values (#{memberId}, #{hotplaceId})
    </insert>

    <select id="findByCondition" parameterType="hotPlaceSearch" resultType="hotPlaceListDto">
        select hp.hot_place_id, hp.name, hp.desc, hp.hit, hp.store_file_name, m.nickname, hp.created_date
        from hot_place hp
        join member m
        on hp.member_id = m.member_id
        where m.nickname like concat('%',#{name}, '%')
        or hp.name like concat('%',#{name}, '%')
        or hp.desc like concat('%',#{name}, '%')
        <choose>
            <when test='sortCondition=="2"'>
                order by hp.hit desc
            </when>
            <otherwise>
                order by hp.created_date desc
            </otherwise>
        </choose>
    </select>
</mapper>
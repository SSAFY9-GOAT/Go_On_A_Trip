<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.goat.tripplan.mapper.PlanMapper">
    <insert id="save" parameterType="tripPlan">
        insert into trip_plan (member_id, title)
        values (#{memberId}, #{title})
    </insert>

    <insert id="save" parameterType="detailPlan">
        insert into detail_plan (trip_plan_id, content_id)
        values (#{tripPlanId}, #{contentId})
    </insert>

    <select id="findById" parameterType="long" resultType="tripPlan">
        select *
        from trip_plan
        where trip_plan_id = #{tripPlanId}
    </select>

    <select id="findByDetailPlanId" parameterType="long" resultType="detialPlan">
        select *
        from detail_plan dp
                 join trip_plan tp
                      on dp.trip_plan_id = tp.trip_plan_id
        where detail_plan_id = #{detailPlanId}
    </select>

    <select id="findAllByMemberId" parameterType="long" resultType="tripPlan">
        select *
        from trip_plan
        where member_id = #{memberId}
    </select>

    <select id="findAllByTripPlanId" parameterType="long" resultType="tripPlanDto">
        select *
        from trip_plan tp
                 left outer join detail_plan dp on tp.trip_plan_id = dp.trip_plan_id
                 join attraction_info a on dp.content_id = a.content_id
        where tp.trip_plan_id = #{tripPlanId}
    </select>

    <select id="findByCondition" parameterType="map" resultType="planListDto">
        select *
        from trip_plan tp
                 join member m
                      on tp.member_id = m.member_id
        where tp.title like concat('%', #{condition}, '%')
           or m.nickname like concat('%', #{condition}, '%')
        order by tp.created_date desc
            limit ${(pageNum - 1) * amount}, #{amount}
    </select>

    <select id="findByMemberId" parameterType="long" resultType="long">
        select trip_plan_id
        from trip_plan
        where member_id = #{memberId}
        order by created_date desc
    </select>

    <select id="findTotalCount" resultType="Integer">
        select count(*) as total
        from trip_plan
    </select>

    <update id="updateTripPlan" parameterType="map">
        update trip_plan
        set title=#{title},
            last_modified_date=#{lastModifiedDate}
        where trip_plan_id = #{tripPlanId}
    </update>

    <delete id="removeTripPlan" parameterType="long">
        delete
        from trip_plan
        where trip_plan_id = #{tripPlanId}
    </delete>

    <delete id="removeDetailPlan" parameterType="long">
        delete
        from detail_plan
        where detail_plan_id = #{detailPlanId}
    </delete>

    <delete id="clear">
        delete
        from detail_plan
    </delete>
</mapper>